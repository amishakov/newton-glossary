Title: Frame

----

Date: 24 May 2001

----

Text:

In (link: /terms/newtonscript text: NewtonScript), an unordered collection of (link: /terms/slot text: slots), each of which consists of a name and value pair. The value of a slot can be any type of (link: /terms/object text: object), and slots can be added or removed from frames dynamically. A frame can have a user-specified (link: /terms/class text: class). Frames can be used like records in Pascal and structs in C, and also as objects that respond to (link: /terms/message text: messages).

----

Related:

- /terms/callback-spec
- /terms/child
- /terms/class
- /terms/data-definition
- /terms/entry
- /terms/finder
- /terms/flatten
- /terms/flattened-soup
- /terms/flattening
- /terms/function-call-stack
- /terms/function-object
- /terms/implementor
- /terms/input-spec
- /terms/item-frame
- /terms/member-soup
- /terms/message
- /terms/name-reference
- /terms/newtonscript
- /terms/nsof
- /terms/object
- /terms/option-frame
- /terms/parent
- /terms/part-frame
- /terms/proto
- /terms/receiver
- /terms/routing-format
- /terms/sibling
- /terms/slot
- /terms/sound-frame
- /terms/soup
- /terms/stack-activation-record
- /terms/unflatten
- /terms/unflattenation
- /terms/unflattening
- /terms/union-soup
- /terms/viewframe

----

Source:

- /sources/newton-programmers-guide
