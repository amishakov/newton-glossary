Title: Finite State Machine

----

Date: 15 January 2017

----

Text:

A collection of states, (link: /terms/event text: events), (link: /terms/action text: actions), and transitions between states defined in software as a (link: /terms/function text: function). This function takes the current state and a specific (link: /terms/input text: input) event and (link: /terms/return text: returns) a new set of (link: /terms/output text: output) events along with the next state. (link: /terms/newton-os text: Newton OS) uses a finite state machine to simplify the design of communication-based applications which manage both the (link: /terms/endpoint text: endpoint) and the related user interaction.

Also referred to as (link: /terms/fsm text: FSM) or (link: /terms/state-machine text: State Machine).

----

Resource:

- [Newton Technology Journal: Finite State Machines: A Model for Newton Communications](http://www.unna.org/unna/apple/documentation/developer/NewtonTechnologyJournal/NTJ_2_02.pdf)

----

Related:

- /terms/action
- /terms/endpoint
- /terms/event
- /terms/fsm
- /terms/function
- /terms/state-machine
- /terms/return

----

Source:

- /sources/foldoc
- /sources/newton-technology-journal
